name: Kernel Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      SUBARCH: arm64
      CLANG_VERSION: 15
      CROSS_COMPILE: aarch64-linux-gnu-

    steps:
      - name: Checkout kernel source
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc build-essential gcc-aarch64-linux-gnu libssl-dev flex bison libncurses-dev \
                                  python3 rsync git wget curl clang-${CLANG_VERSION} lld-${CLANG_VERSION}
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION} 100
          sudo update-alternatives --install /usr/bin/ld.lld ld.lld /usr/bin/ld.lld-${CLANG_VERSION} 100

      - name: Set up kernel output directory
        run: mkdir -p out

      - name: Configure kernel
        run: make O=out ARCH=arm64 CC=clang-${CLANG_VERSION} pipa_defconfig

      - name: Build kernel and modules
        run: make -j$(nproc) O=out ARCH=arm64 CC=clang-${CLANG_VERSION} CROSS_COMPILE=${CROSS_COMPILE} modules

      - name: Archive build output
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-output
          path: out
